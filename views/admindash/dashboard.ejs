<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shadowies Cafe</title>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<link rel="stylesheet" href="stylesheet/user-dash.css">
<link rel="stylesheet" href="/stylesheet/transition.css">
<link rel="stylesheet" href="/stylesheet/dashboard.css">
<script src="https://code.jquery.com/jquery-3.6.0.js"></script>
<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.9.1/gsap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.9.1/ScrollTrigger.min.js"></script>
<script src="https://unpkg.com/@barba/core"></script>
</head>
<%- include('../partials/flash') %>
<%- include('../partials/sidebar') %>
<body data-barba="wrapper">
<div class="loading-container">
<div class="loading-screen">
 <div data-glitch="Loading..." class="glitch">Loading...</div>
</div>
</div>

<main data-barba="container" data-barba-namespace="dashboard-section">
        <div class="container-md dash-content">
            <h1 class="h3 mb-2 text-gray-800">Tables</h1>
            <div class="row">
                <div class="col-sm-3 card sales-container">
                    <h2>
                        $<%= totalSale.toFixed(2) %>
                    </h2>
                    <small>Total Sales</small>
                </div>


<div class="card ms-5 col-sm-3 pie-chart  d-flex justify-content-center align-items-center">
                <div class="card-body">
                    <h5 class="card-title">Best Seller Product</h5>
                    <canvas id="bestSellerChart"></canvas>

                </div>
</div>
<div class="card ms-5 col-sm-3 active-users">
     <h5 class="card-title mt-3">Active Users</h5>
    <table class="table">
        <thead>
            <tr>
                <th>User</th>
                <th>Percentage</th>
            </tr>
        </thead>
        <tbody>
          <% usersWithPercentage.sort((a, b) => b.percentage - a.percentage).forEach(user => { %>
                <% if (user.percentage >= 20) { %>
                    <tr>
<% if (user.user.isLoggedIn) { %>
  <td><span class="active"></span><%= user.user.username %></td>
  <td><%= user.percentage.toFixed(2) %>%</td>
<% } else { %>
  <td><span class="notActive"></span><%= user.user.username %></td>
  <td><%= user.percentage.toFixed(2) %>%</td>
<% } %>
                    </tr>
                <% } %>
            <% }); %>
        </tbody>
    </table>
</div>
 <div class="card col-md-10 mt-4 mb-3 monthly-sales">
                    <div class="card-body">
                        <div class="">
                            <canvas id="monthlyChart"></canvas>
                        </div>
                    </div>
                </div>


            </div>
</div>

</main>

<script>
gsap.from(".container-md", {
duration: 1,
    scale: 0.5,
    opacity: 0,
    delay: 0.5,
    stagger: 0.2,
    ease: "back",
    force3D: true
});
</script>

   <script>
            document.addEventListener('DOMContentLoaded', function () {
                const monthlyData = <%- JSON.stringify(monthlyData) %>;
                const bestSellerProducts =<%- JSON.stringify(bestSellerProducts) %>;

                // Create the chart
                const ctx = document.getElementById('monthlyChart').getContext('2d');
                new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                        datasets: [{
                            label: 'Monthly Sales',
                            data: monthlyData,
                            borderColor: 'rgba(75, 192, 192, 1)',
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            tension: 0.3
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    precision: 0 // Display integer values for the y-axis ticks
                                }
                            }
                        },
   animations: {
      radius: {
        duration: 400,
        easing: 'linear',
        loop: (context) => context.active
      }
    },
    hoverRadius: 12,
    hoverBackgroundColor: 'yellow',
    interaction: {
      mode: 'nearest',
      intersect: false,
      axis: 'x'
    },
    plugins: {
      tooltip: {
        enabled: false
      }
    }
                    }
                });

                const bestSellerCtx = document.getElementById('bestSellerChart').getContext('2d');
let delayed;
                new Chart(bestSellerCtx, {
                    type: 'pie',
                    data: {
                        labels: bestSellerProducts.map(product => product.product.title),
                        datasets: [{
                            data: bestSellerProducts.map(product => product.sales),
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.7)',
                                'rgba(54, 162, 235, 0.7)',
                                'rgba(255, 206, 86, 0.7)',
                                'rgba(75, 192, 192, 0.7)',
                                'rgba(153, 102, 255, 0.7)',
                                'rgba(255, 159, 64, 0.7)',
                                'rgba(233, 30, 99, 0.7)',
                                'rgba(16, 150, 24, 0.7)',
                                'rgba(140, 35, 183, 0.7)',
                                'rgba(46, 125, 50, 0.7)'
                            ],
                            borderColor: 'rgba(255, 255, 255, 1)',
                            borderWidth: 2
                        }]
                    },
                    options: {
                        responsive: false,
                        maintainAspectRatio: false,
 animation: {
      onComplete: () => {
        delayed = true;
      },
      delay: (context) => {
        let delay = 0;
        if (context.type === 'data' && context.mode === 'default' && !delayed) {
          delay = context.dataIndex * 300 + context.datasetIndex * 100;
        }
        return delay;
      },
    },
    scales: {
      x: {
        stacked: true,
      },
      y: {
        stacked: true
      }
    }
                    }
                });
            });



        </script>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.0.2/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
        crossorigin="anonymous"></script>
</body>

</html>